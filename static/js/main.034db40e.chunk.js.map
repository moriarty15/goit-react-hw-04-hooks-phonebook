{"version":3,"sources":["Components/Container.module.css","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/Container.js","Components/ContactList/ContactListItem.js","Components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","props","contacts","setContacts","useState","name","setName","number","setNumber","handelChange","e","target","value","onSubmit","preventDefault","state","trim","className","onChange","type","pattern","title","required","onClick","some","contact","alert","id","uuidv4","Filter","Container","children","s","container","ContactListItem","onDeleteContact","ContactList","visibleContacts","map","App","localStorage","getItem","setItem","JSON","parse","filter","setFilter","useEffect","window","stringify","normalizeFilter","toLowerCase","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.034db40e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Bu6P\",\"title\":\"Container_title__3BONR\"};","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ContactForm.scss\";\r\n\r\nexport default function ContactForm(props) {\r\n  const { contacts, setContacts } = props;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handelChange = (e) => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const addContact = (e) => {\r\n    if (contacts) {\r\n      if (contacts.some((contact) => contact.name === name)) {\r\n        alert(`${name} is already in contacts`);\r\n        setName(\"\");\r\n        setNumber(\"\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    e.preventDefault();\r\n    setContacts([{ name: name, number: number, id: uuidv4() }, ...contacts]);\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n  const handlePushContact = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.name.trim() === \"\") return;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handlePushContact}>\r\n      <label className=\"label\">\r\n        Name\r\n        <input\r\n          className=\"input\"\r\n          onChange={handelChange}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className=\"label\">\r\n        Number\r\n        <input\r\n          className=\"input\"\r\n          onChange={handelChange}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className=\"add__button\" onClick={addContact}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  setContacts: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function Filter({ handelChange }) {\r\n  return (\r\n    <>\r\n      <label className=\"label\">\r\n        Find contacts by name\r\n        <input\r\n          className=\"input\"\r\n          onChange={handelChange}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  handelChange: PropTypes.func.isRequired,\r\n};\r\n","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      {children}\n    </div>\n  );\n}\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function ContactListItem(props) {\r\n  const { name, number, id, onDeleteContact } = props;\r\n  return (\r\n    <p>\r\n      {name}: <span>{number}</span>\r\n      <button\r\n        className=\"button__delete\"\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        delete\r\n      </button>\r\n    </p>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import ContactListItem from \"./ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ContactList.scss\";\r\n\r\nexport default function ContactList(props) {\r\n  const { onDeleteContact, visibleContacts } = props;\r\n  return (\r\n    <ul className=\"Contact__list\">\r\n      {visibleContacts &&\r\n        visibleContacts.map(({ id, name, number }) => {\r\n          return (\r\n            <li key={id} className=\"Contact__item\">\r\n              <ContactListItem\r\n                name={name}\r\n                number={number}\r\n                id={id}\r\n                onDeleteContact={onDeleteContact}\r\n              />\r\n            </li>\r\n          );\r\n        })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  visibleContacts: PropTypes.array.isRequired,\r\n};\r\n","import { useState, useEffect } from \"react\";\nimport ContactForm from \"./Components/ContactForm\";\nimport Filter from \"./Components/Filter\";\nimport Container from './Components/Container'\nimport ContactList from \"./Components/ContactList\";\n\nfunction App() {\n  if (!localStorage.getItem('contacts')) {\n    localStorage.setItem('contacts', '[]')\n  }\n  const [contacts, setContacts] = useState(JSON.parse(localStorage.getItem('contacts')));\n\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts))\n  }, [contacts])\n\n  const handelChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"filter\":\n        setFilter(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const getVisibleContacts = () => {\n    const normalizeFilter = filter.toLowerCase();\n    if (contacts) {\n      return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n    }\n    \n  };\n\n  const onDeleteContact = contactId => {\n    return setContacts(contacts.filter(contact => contact.id !== contactId))\n   }\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <Container>\n      <ContactForm contacts={contacts} setContacts={setContacts} />\n      <h2>Contacts</h2>\n      <Filter handelChange={handelChange} />\n      <ContactList visibleContacts={visibleContacts}\n        onDeleteContact={onDeleteContact}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}